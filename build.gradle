//file:noinspection GroovyAssignabilityCheck
plugins {
  id "fabric-loom" version "0.10.+"
  id "com.modrinth.minotaur" version "1.2.+"
  id "org.cadixdev.licenser" version "0.6.+"
  id "maven-publish"
}

String mod_version = loom.modVersion
String minecraft_version = "1.17.1"
String yarn_mappings = "65"           // https://fabricmc.net/versions.html
String loader_version = "0.12.12"     // https://fabricmc.net/versions.html
String fabric_version = "0.45.1+1.17" // https://fabricmc.net/versions.html
String modmenu_version = "2.0.14"     // https://modrinth.com/mod/modmenu/versions
String midnightlib_version = "0.3.1"  // https://modrinth.com/mod/midnightlib/versions

archivesBaseName = "quilt-loading-screen"
version = mod_version + "+" + minecraft_version + System.getenv().SNAPSHOT

repositories {
  maven { url "https://maven.terraformersmc.com" }
  maven { url "https://api.modrinth.com/maven" }
}

dependencies {
  minecraft "com.mojang:minecraft:${minecraft_version}"
  mappings "net.fabricmc:yarn:${minecraft_version}+build.${yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${loader_version}"
  modImplementation fabricApi.module("fabric-resource-loader-v0", fabric_version)
  ["fabric-renderer-registries-v1", "fabric-lifecycle-events-v1"].forEach {
    modRuntimeOnly fabricApi.module(it, fabric_version)
  }

  modImplementation include("maven.modrinth:midnightlib:${midnightlib_version}")
  modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
}

idea { module { downloadJavadoc = false } }

tasks.withType(JavaCompile) { it.options.encoding = "UTF-8" }

jar { from("LICENSE", "README.md") }

task modrinth(type: com.modrinth.minotaur.TaskModrinthUpload) {
  token = System.getenv("MODRINTH")
  projectId = "VPU6VYVP"
  versionNumber = mod_version
  versionType = "RELEASE"
  uploadFile = remapJar
  addGameVersion minecraft_version
  addLoader "fabric"
}

java { withSourcesJar() }

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId = 'coffee.waffle'
      artifactId = archivesBaseName
      version = version
      from components.java
    }
  }
  repositories {
    maven {
      url = System.getenv().MAVEN_URL
      credentials {
        username = System.getenv().MAVEN_USER
        password = System.getenv().MAVEN_PASS
      }
      authentication { basic(BasicAuthentication) }
    }
  }
}
